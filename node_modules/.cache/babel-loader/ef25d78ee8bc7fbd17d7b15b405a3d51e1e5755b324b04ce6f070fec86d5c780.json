{"ast":null,"code":"var _jsxFileName = \"/Users/isamercan/Github/Cosmetic-Prompt-Library/src/App.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Copy, ChevronDown, Rocket, Dice5, ChevronUp as ChevronUpIcon } from 'lucide-react';\n\n// Helper function to shuffle an array\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  let currentIndex = array.length,\n    randomIndex;\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n  return array;\n};\n\n// Main App component\nconst App = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  // State to hold the custom overlay text entered by the user\n  const [overlayText, setOverlayText] = useState('');\n  // State to hold the selected aspect ratio\n  const [selectedAspectRatio, setSelectedAspectRatio] = useState('1:1');\n  // State to hold the selected camera lens\n  const [selectedCameraLens, setSelectedCameraLens] = useState('85mm');\n  // State to hold the selected lighting style\n  const [selectedLighting, setSelectedLighting] = useState('DEFAULT_PROMPT_LIGHTING');\n\n  // State to trigger re-randomization for \"Default (Per Prompt)\" options\n  const [randomizeKey, setRandomizeKey] = useState(0);\n\n  // States to hold the loaded prompt data from JSON\n  const [allPromptsData, setAllPromptsData] = useState(null); // Holds the entire JSON object\n  const [isLoadingOptions, setIsLoadingOptions] = useState(true);\n  const [errorLoadingOptions, setErrorLoadingOptions] = useState(false);\n\n  // Shuffled versions of the default arrays (used for 'Default (Per Prompt)' randomization)\n  const [shuffledLightingOptions, setShuffledLightingOptions] = useState([]);\n  const [shuffledSceneOptions, setShuffledSceneOptions] = useState([]);\n  const [shuffledMoodEmotionOptions, setShuffledMoodEmotionOptions] = useState([]);\n  const [shuffledFontStyleOptions, setShuffledFontStyleOptions] = useState([]);\n  const [shuffledFontColorOptions, setShuffledFontColorOptions] = useState([]);\n  const [shuffledResolutionOptions, setShuffledResolutionOptions] = useState([]);\n  const [shuffledFramingOptions, setShuffledFramingOptions] = useState([]);\n  const [shuffledOutputStyleOptions, setShuffledOutputStyleOptions] = useState([]);\n\n  // Creative prompt names array (will be loaded from JSON and potentially shuffled)\n  const [creativePromptNames, setCreativePromptNames] = useState([]);\n\n  // Effect to load prompt data from JSON\n  useEffect(() => {\n    const loadPromptData = async () => {\n      try {\n        setIsLoadingOptions(true);\n        setErrorLoadingOptions(false);\n\n        // Try to fetch from public directory first\n        const response = await fetch('/prompts.json');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n\n        // Validate the data structure\n        if (!data || !data.options || !data.creativeNames || !data.prompts) {\n          throw new Error('Invalid data structure in prompts.json');\n        }\n        setAllPromptsData(data);\n        console.log('Successfully loaded prompt data');\n      } catch (error) {\n        console.error(\"Failed to load prompt data:\", error);\n        setErrorLoadingOptions(true);\n        // Show more detailed error message\n        alert(`Failed to load prompt data: ${error.message}. Please check if prompts.json exists in the public directory.`);\n      } finally {\n        setIsLoadingOptions(false);\n      }\n    };\n    loadPromptData();\n  }, []);\n\n  // Effect to shuffle arrays when allPromptsData are loaded or randomizeKey changes\n  useEffect(() => {\n    if (allPromptsData && allPromptsData.options && allPromptsData.creativeNames) {\n      // Use options and creativeNames directly from loaded JSON\n      setShuffledLightingOptions(shuffleArray([...allPromptsData.options.lighting]));\n      setShuffledSceneOptions(shuffleArray([...allPromptsData.options.scenes]));\n      setShuffledMoodEmotionOptions(shuffleArray([...allPromptsData.options.moodEmotions]));\n      setShuffledFontStyleOptions(shuffleArray([...allPromptsData.options.fontStyles]));\n      setShuffledFontColorOptions(shuffleArray([...allPromptsData.options.fontColors]));\n      setShuffledResolutionOptions(shuffleArray([...allPromptsData.options.resolutions]));\n      setShuffledFramingOptions(shuffleArray([...allPromptsData.options.framings]));\n      setShuffledOutputStyleOptions(shuffleArray([...allPromptsData.options.outputStyles]));\n      setCreativePromptNames(shuffleArray([...allPromptsData.creativeNames])); // Creative names are also shuffled\n    }\n  }, [allPromptsData, randomizeKey]); // Re-shuffle when allPromptsData are loaded or randomizeKey changes\n\n  /**\n   * Generates a cosmetic prompt string based on the prompt's data and selected global parameters.\n   * @param {object} promptData - The specific prompt object from the JSON array.\n   * @param {string} currentOverlayText - Custom text to include as an overlay.\n   * @param {string} currentAspectRatio - Selected aspect ratio from global controls.\n   * @param {string} currentCameraLens - Selected camera lens from global controls.\n   * @param {string} selectedGlobalLighting - Selected lighting style from global controls (or default).\n   * @returns {string} The generated prompt string.\n   */\n  const generatePrompt = useCallback((promptData,\n  // Now takes the full prompt object\n  currentOverlayTextParam,\n  // Renamed parameter to avoid confusion\n  currentAspectRatioParam, currentCameraLensParam, selectedGlobalLightingParam) => {\n    if (!allPromptsData || shuffledLightingOptions.length === 0) return ''; // Don't generate if data isn't ready\n\n    const hasOverlay = currentOverlayTextParam && currentOverlayTextParam.trim() !== '';\n\n    // Use selected global lighting, or the shuffled default if 'DEFAULT_PROMPT_LIGHTING'\n    const lightingToUse = selectedGlobalLightingParam === 'DEFAULT_PROMPT_LIGHTING' ? shuffledLightingOptions[promptData.parameters.lightingIndex % shuffledLightingOptions.length] : selectedGlobalLightingParam;\n\n    // Get values from shuffled arrays using indices from promptData\n    const sceneToUse = shuffledSceneOptions[promptData.sceneDescriptionIndex % shuffledSceneOptions.length];\n    const moodEmotionToUse = shuffledMoodEmotionOptions[promptData.moodEmotionIndex % shuffledMoodEmotionOptions.length];\n    const fontStyleToUse = shuffledFontStyleOptions[promptData.parameters.fontStyleIndex % shuffledFontStyleOptions.length];\n    const fontColorToUse = shuffledFontColorOptions[promptData.parameters.fontColorIndex % shuffledFontColorOptions.length];\n    const resolutionToUse = shuffledResolutionOptions[promptData.parameters.resolutionIndex % shuffledResolutionOptions.length];\n    const framingToUse = shuffledFramingOptions[promptData.parameters.framingIndex % shuffledFramingOptions.length];\n    const outputStyleToUse = shuffledOutputStyleOptions[promptData.outputStyleIndex % shuffledOutputStyleOptions.length];\n    return `${hasOverlay ? `[PARAMETERS]\\nOverlay Text: ${currentOverlayTextParam}` : `[PARAMETERS]`}\\nAspect Ratio: ${currentAspectRatioParam}\\nFont Style: ${fontStyleToUse}\\nFont Color: ${fontColorToUse}\\nResolution: ${resolutionToUse}\\nCamera Lens: ${currentCameraLensParam}\\nFraming: ${framingToUse}\\nLighting: ${lightingToUse}\\n\\n[DESCRIPTION]\\n${promptData.promptDescription}\\n\\n[PRODUCT INTEGRITY]\\n${promptData.productIntegrityRequirements.map(req => `- ${req}`).join('\\n')}\\n\\n[SCENE]\\n- ${sceneToUse}\\n\\n[MOOD & EMOTION]\\n- ${moodEmotionToUse}\\n\\n[OUTPUT STYLE]\\n- ${outputStyleToUse}`;\n  }, [selectedLighting, overlayText, selectedAspectRatio, selectedCameraLens, allPromptsData,\n  // Dependencies for useCallback\n  shuffledLightingOptions, shuffledSceneOptions, shuffledMoodEmotionOptions, shuffledFontStyleOptions, shuffledFontColorOptions, shuffledResolutionOptions, shuffledFramingOptions, shuffledOutputStyleOptions]);\n\n  /**\n   * Generates the original prompt text for each prompt.\n   * This function uses fixed default values from the original loaded JSON data.\n   * @param {object} originalPromptData - The specific original prompt object from the JSON array.\n   * @returns {string} The original prompt string.\n   */\n  const getOriginalPromptText = useCallback(originalPromptData => {\n    if (!allPromptsData) return ''; // Don't generate if data isn't loaded yet\n\n    // Get values from original (unshuffled) options arrays using indices from originalPromptData\n    const originalLighting = allPromptsData.options.lighting[originalPromptData.parameters.lightingIndex];\n    const originalScene = allPromptsData.options.scenes[originalPromptData.sceneDescriptionIndex];\n    const originalMoodEmotion = allPromptsData.options.moodEmotions[originalPromptData.moodEmotionIndex];\n    const originalFontStyle = allPromptsData.options.fontStyles[originalPromptData.parameters.fontStyleIndex];\n    const originalFontColor = allPromptsData.options.fontColors[originalPromptData.parameters.fontColorIndex];\n    const originalResolution = allPromptsData.options.resolutions[originalPromptData.parameters.resolutionIndex];\n    const originalFraming = allPromptsData.options.framings[originalPromptData.parameters.framingIndex];\n    const originalOutputStyle = allPromptsData.options.outputStyles[originalPromptData.outputStyleIndex];\n\n    // OverlayText was not in original prompt, so leaving it empty.\n    return `[PARAMETERS]\\nAspect Ratio: ${originalPromptData.parameters.aspectRatio}\\nFont Style: ${originalFontStyle}\\nFont Color: ${originalFontColor}\\nResolution: ${originalResolution}\\nCamera Lens: ${originalPromptData.parameters.cameraLens}\\nFraming: ${originalFraming}\\nLighting: ${originalLighting}\\n\\n[DESCRIPTION]\\n${originalPromptData.promptDescription}\\n\\n[PRODUCT INTEGRITY]\\n${originalPromptData.productIntegrityRequirements.map(req => `- ${req}`).join('\\n')}\\n\\n[SCENE]\\n- ${originalScene}\\n\\n[MOOD & EMOTION]\\n- ${originalMoodEmotion}\\n\\n[OUTPUT STYLE]\\n- ${originalOutputStyle}`;\n  }, [allPromptsData]); // Dependency on allPromptsData\n\n  // Function to copy text to clipboard\n  const copyToClipboard = (text, buttonElement, originalButtonText) => {\n    const textarea = document.createElement('textarea');\n    textarea.value = text;\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      document.execCommand('copy');\n      const spanElement = buttonElement.querySelector('span');\n      if (spanElement) {\n        spanElement.textContent = 'Copied!';\n        setTimeout(() => {\n          spanElement.textContent = originalButtonText; // Restore original button text\n        }, 2000);\n      }\n    } catch (err) {\n      console.error('Failed to copy text: ', err);\n      const spanElement = buttonElement.querySelector('span');\n      if (spanElement) {\n        spanElement.textContent = 'Failed to copy!';\n        setTimeout(() => {\n          spanElement.textContent = originalButtonText;\n        }, 2000);\n      }\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // Main container with Tailwind CSS for styling\n    _jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gradient-to-br from-gray-950 to-black text-gray-200 font-inter relative overflow-hidden flex flex-col items-center p-4 sm:p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 z-0 opacity-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-1/4 left-1/4 w-80 h-80 bg-blue-500 rounded-full mix-blend-multiply filter blur-3xl opacity-40 animate-blob\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute bottom-1/4 right-1/4 w-80 h-80 bg-purple-500 rounded-full mix-blend-multiply filter blur-3xl opacity-40 animate-blob animation-delay-2000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-pink-500 rounded-full mix-blend-multiply filter blur-3xl opacity-40 animate-blob animation-delay-4000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-5xl sm:text-6xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-blue-300 to-purple-400 mb-12 text-center drop-shadow-lg relative z-10 animate-fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"sparkle\",\n          children: \"\\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this), \" COSMIC PROMPTS \", /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"sparkle\",\n          children: \"\\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 71\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-4xl bg-gray-900/70 backdrop-blur-lg p-8 rounded-3xl shadow-2xl mb-12 border border-gray-700 relative z-10 animate-slide-up transition-all duration-500 hover:shadow-blue-500/30\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 rounded-3xl pointer-events-none\",\n          style: {\n            border: '1px solid rgba(100, 100, 100, 0.2)',\n            boxShadow: 'inset 0 0 25px rgba(0,200,255,0.08), 0 0 40px rgba(150,0,255,0.15)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"overlayTextInput\",\n              className: \"block text-sm font-medium text-gray-300 mb-2\",\n              children: \"Overlay Text (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"overlayTextInput\",\n              placeholder: \"Enter custom overlay text\",\n              value: overlayText,\n              onChange: e => setOverlayText(e.target.value),\n              className: \"w-full p-3 rounded-xl bg-gray-800/60 border border-blue-700 text-gray-100 focus:outline-none focus:ring-4 focus:ring-blue-500 transition-all duration-300 text-lg shadow-inner-dark focus:border-blue-500 placeholder-gray-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"aspectRatioSelect\",\n                className: \"block text-sm font-medium text-gray-300 mb-2\",\n                children: \"Aspect Ratio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"aspectRatioSelect\",\n                  value: selectedAspectRatio,\n                  onChange: e => setSelectedAspectRatio(e.target.value),\n                  className: \"w-full p-3 rounded-xl bg-gray-800/60 border border-purple-700 text-gray-100 focus:outline-none focus:ring-4 focus:ring-purple-500 transition-all duration-300 text-lg shadow-inner-dark appearance-none pr-10 custom-select placeholder-gray-500\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"1:1\",\n                    children: \"1:1 (Square)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"4:5\",\n                    children: \"4:5 (Portrait)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"16:9\",\n                    children: \"16:9 (Landscape)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n                  className: \"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 pointer-events-none\",\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"cameraLensSelect\",\n                className: \"block text-sm font-medium text-gray-300 mb-2\",\n                children: \"Camera Lens\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"cameraLensSelect\",\n                  value: selectedCameraLens,\n                  onChange: e => setSelectedCameraLens(e.target.value),\n                  className: \"w-full p-3 rounded-xl bg-gray-800/60 border border-purple-700 text-gray-100 focus:outline-none focus:ring-4 focus:ring-purple-500 transition-all duration-300 text-lg shadow-inner-dark appearance-none pr-10 custom-select placeholder-gray-500\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"85mm\",\n                    children: \"85mm (Portrait)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"50mm\",\n                    children: \"50mm (Standard)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"24mm\",\n                    children: \"24mm (Wide Angle)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n                  className: \"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 pointer-events-none\",\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lightingSelect\",\n                className: \"block text-sm font-medium text-gray-300 mb-2\",\n                children: \"Lighting\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"lightingSelect\",\n                  value: selectedLighting,\n                  onChange: e => setSelectedLighting(e.target.value),\n                  className: \"w-full p-3 rounded-xl bg-gray-800/60 border border-purple-700 text-gray-100 focus:outline-none focus:ring-4 focus:ring-purple-500 transition-all duration-300 text-lg shadow-inner-dark appearance-none pr-10 custom-select placeholder-gray-500\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"DEFAULT_PROMPT_LIGHTING\",\n                    children: \"Default (Per Prompt)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 19\n                  }, this), allPromptsData && allPromptsData.options.lighting.map((option, index) =>\n                  /*#__PURE__*/\n                  // Use loaded options\n                  _jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 21\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n                  className: \"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 pointer-events-none\",\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRandomizeKey(prev => prev + 1) // Increment key to trigger re-shuffle\n            ,\n            className: \"flex items-center justify-center gap-2 px-6 py-3 rounded-full shadow-lg text-white font-semibold relative overflow-hidden z-10 transition-all duration-300 transform hover:-translate-y-1 active:translate-y-0 text-base bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 focus:outline-none focus:ring-4 focus:ring-blue-300 button-glow\",\n            children: [/*#__PURE__*/_jsxDEV(Dice5, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 13\n            }, this), \" Randomize All Prompts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-8 w-full max-w-5xl mx-auto relative z-10\",\n        children: [\" \", allPromptsData && _s(allPromptsData.prompts.map(_s((promptData, index) => {\n          _s();\n          // Iterate over loaded prompt data\n          // State for individual prompt expansion\n          const [isPromptExpanded, setIsPromptExpanded] = useState(false);\n          const promptCode = generatePrompt(promptData,\n          // Pass the full promptData object\n          overlayText, selectedAspectRatio, selectedCameraLens, selectedLighting);\n          const imgWidth = selectedAspectRatio === '1:1' ? 1000 : selectedAspectRatio === '4:5' ? 800 : 1600;\n          const imgHeight = selectedAspectRatio === '1:1' ? 1000 : selectedAspectRatio === '4:5' ? 1000 : 900;\n          return (\n            /*#__PURE__*/\n            // Individual Prompt Card (List Item)\n            _jsxDEV(\"div\", {\n              // Use UUID as key\n              className: \"bg-gray-900/70 backdrop-blur-lg rounded-3xl shadow-xl p-6 flex flex-col md:flex-row gap-6 items-center transition-all duration-300 transform hover:scale-103 hover:shadow-blue-500/30 border border-gray-700 relative overflow-hidden group animate-fade-in-up\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute inset-0 rounded-3xl pointer-events-none z-20\",\n                style: {\n                  border: '1px solid rgba(100, 100, 100, 0.2)',\n                  boxShadow: 'inset 0 0 10px rgba(0,200,255,0.05)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full md:w-1/3 flex-shrink-0 bg-gray-800 rounded-xl overflow-hidden flex items-center justify-center border border-gray-700 group-hover:border-blue-500 transition-colors duration-300 relative aspect-w-16 aspect-h-9\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `https://placehold.co/${imgWidth}x${imgHeight}/1A202C/93C5FD?text=AR%3A+${selectedAspectRatio}`,\n                  alt: `Example for Prompt ${promptData.promptTitleIndex}`,\n                  className: \"w-full h-full object-contain rounded-xl opacity-80 group-hover:opacity-100 transition-opacity duration-300\" // object-contain kullanıldı\n                  ,\n                  onError: e => {\n                    e.target.onerror = null;\n                    e.target.src = `https://placehold.co/400x200/1A202C/FF0000?text=Image+Unavailable`;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"absolute inset-0 bg-gradient-to-t from-transparent to-blue-500 opacity-0 group-hover:opacity-10 transition-opacity duration-300\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col flex-grow w-full md:w-2/3\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-2xl font-bold text-purple-400 mb-3 group-hover:text-blue-400 transition-colors duration-300\",\n                  children: allPromptsData.creativeNames[promptData.promptTitleIndex]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 17\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"pre\", {\n                  className: `bg-gray-800/60 p-4 rounded-xl text-sm font-mono whitespace-pre-wrap break-words mb-4 text-gray-300 border border-gray-700 group-hover:border-blue-600 transition-colors duration-300 shadow-inner-dark \n                  ${isPromptExpanded ? '' : 'max-h-[12rem] overflow-hidden'}` // Fixed height and overflow\n                  ,\n                  children: promptCode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setIsPromptExpanded(!isPromptExpanded),\n                  className: \"self-start text-blue-400 hover:text-blue-300 transition-colors duration-200 text-sm font-semibold flex items-center gap-1 mb-4\",\n                  children: isPromptExpanded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [\"Show Less \", /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [\"Show Full Prompt \", /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 40\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-row gap-3 mt-auto flex-wrap sm:flex-nowrap\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => {\n                      copyToClipboard(promptCode, e.target, 'Copy & Open GPT 4o');\n                      window.open('https://chat.openai.com/chat', '_blank');\n                    },\n                    className: \"flex-1 flex items-center justify-center gap-1 px-3 py-2.5 rounded-full shadow-lg text-white font-semibold relative overflow-hidden z-10 transition-all duration-300 transform hover:-translate-y-1 active:translate-y-0 text-sm bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 focus:outline-none focus:ring-4 focus:ring-purple-300 before:content-[''] before:absolute before:inset-0 before:bg-gradient-to-r before:from-purple-500 before:to-blue-500 before:opacity-0 before:transition-opacity before:duration-300 hover:before:opacity-100 hover:text-white button-glow\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"relative z-10 flex items-center justify-center gap-1\",\n                      children: [/*#__PURE__*/_jsxDEV(Copy, {\n                        size: 16\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 375,\n                        columnNumber: 23\n                      }, this), \" Copy & Open GPT 4o\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => {\n                      copyToClipboard(getOriginalPromptText(promptData), e.target, 'Copy Original & Open GPT'); // Pass promptData object\n                      window.open('https://chat.openai.com/chat', '_blank');\n                    },\n                    className: \"flex-1 flex items-center justify-center gap-1 px-3 py-2.5 rounded-full shadow-lg text-white font-semibold relative overflow-hidden z-10 transition-all duration-300 transform hover:-translate-y-1 active:translate-y-0 text-sm bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 focus:outline-none focus:ring-4 focus:ring-blue-300 before:content-[''] before:absolute before:inset-0 before:bg-gradient-to-r before:from-blue-500 before:to-purple-500 before:opacity-0 before:transition-opacity before:duration-300 hover:before:opacity-100 hover:text-white button-glow\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"relative z-10 flex items-center justify-center gap-1\",\n                      children: [/*#__PURE__*/_jsxDEV(Rocket, {\n                        size: 16\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 390,\n                        columnNumber: 23\n                      }, this), \" Copy Original & Open GPT\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 15\n              }, this)]\n            }, promptData.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 13\n            }, this)\n          );\n        }, \"38GV4fAPBjdkl8dZhiMOnA60fMs=\")), \"38GV4fAPBjdkl8dZhiMOnA60fMs=\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n        children: `\n        @keyframes fade-in {\n          from { opacity: 0; transform: translateY(-20px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        @keyframes slide-up {\n          from { opacity: 0; transform: translateY(20px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        @keyframes fade-in-up {\n          from { opacity: 0; transform: translateY(30px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        @keyframes blob {\n          0% {\n            transform: translate(0px, 0px) scale(1);\n          }\n          33% {\n            transform: translate(30px, -50px) scale(1.1);\n          }\n          66% {\n            transform: translate(-20px, 20px) scale(0.9);\n          }\n          100% {\n            transform: translate(0px, 0px) scale(1);\n          }\n        }\n        .animate-fade-in { animation: fade-in 1s ease-out forwards; }\n        .animate-slide-up { animation: slide-up 1s ease-out forwards; animation-delay: 0.2s; }\n        .animate-fade-in-up { animation: fade-in-up 0.6s ease-out forwards; }\n        .animate-fade-in-up:nth-child(1) { animation-delay: 0.3s; }\n        .animate-fade-in-up:nth-child(2) { animation-delay: 0.4s; }\n        .animate-fade-in-up:nth-child(3) { animation-delay: 0.5s; }\n        .animate-fade-in-up:nth-child(4) { animation-delay: 0.6s; }\n        /* ... remaining animations can continue with increasing delays */\n\n        .animate-blob {\n          animation: blob 7s infinite;\n        }\n        .animation-delay-2000 { animation-delay: 2s; }\n        .animation-delay-4000 { animation-delay: 4s; }\n\n        .custom-select {\n          background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cpath fill='%23a1a1aa' d='M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z'/%3E%3C/svg%3E\");\n          background-repeat: no-repeat;\n          background-position: right 0.75rem center;\n          background-size: 1.5em 1.5em;\n        }\n\n        .shadow-inner-dark {\n          box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.4);\n        }\n\n        .button-glow:hover {\n          box-shadow: 0 0 20px rgba(var(--button-glow-color), 0.7);\n        }\n        /* --button-glow-color variables would typically be in a Tailwind config,\n           but here we use direct rgba values */\n        .group-hover\\\\:shadow-fuchsia-500\\\\/50 {\n            box-shadow: 0 0 20px rgba(233, 30, 99, 0.5); /* fuchsia-500 */\n        }\n        .group-hover\\\\:shadow-indigo-500\\\\/50 {\n            box-shadow: 0 0 20px rgba(99, 102, 241, 0.5); /* indigo-500 */\n        }\n        /* Newly added styles */\n        .bg-clip-text {\n            -webkit-background-clip: text;\n            background-clip: text;\n        }\n        .placeholder-gray-500::placeholder {\n            color: #6b7280; /* Tailwind gray-500 */\n            opacity: 1; /* For Firefox */\n        }\n      `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s2(App, \"4gTp/ox2SC9EIJTTYPi8AmyNEK0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Copy","ChevronDown","Rocket","Dice5","ChevronUp","ChevronUpIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","shuffleArray","array","currentIndex","length","randomIndex","Math","floor","random","App","_s2","_s","$RefreshSig$","overlayText","setOverlayText","selectedAspectRatio","setSelectedAspectRatio","selectedCameraLens","setSelectedCameraLens","selectedLighting","setSelectedLighting","randomizeKey","setRandomizeKey","allPromptsData","setAllPromptsData","isLoadingOptions","setIsLoadingOptions","errorLoadingOptions","setErrorLoadingOptions","shuffledLightingOptions","setShuffledLightingOptions","shuffledSceneOptions","setShuffledSceneOptions","shuffledMoodEmotionOptions","setShuffledMoodEmotionOptions","shuffledFontStyleOptions","setShuffledFontStyleOptions","shuffledFontColorOptions","setShuffledFontColorOptions","shuffledResolutionOptions","setShuffledResolutionOptions","shuffledFramingOptions","setShuffledFramingOptions","shuffledOutputStyleOptions","setShuffledOutputStyleOptions","creativePromptNames","setCreativePromptNames","loadPromptData","response","fetch","ok","Error","status","data","json","options","creativeNames","prompts","console","log","error","alert","message","lighting","scenes","moodEmotions","fontStyles","fontColors","resolutions","framings","outputStyles","generatePrompt","promptData","currentOverlayTextParam","currentAspectRatioParam","currentCameraLensParam","selectedGlobalLightingParam","hasOverlay","trim","lightingToUse","parameters","lightingIndex","sceneToUse","sceneDescriptionIndex","moodEmotionToUse","moodEmotionIndex","fontStyleToUse","fontStyleIndex","fontColorToUse","fontColorIndex","resolutionToUse","resolutionIndex","framingToUse","framingIndex","outputStyleToUse","outputStyleIndex","promptDescription","productIntegrityRequirements","map","req","join","getOriginalPromptText","originalPromptData","originalLighting","originalScene","originalMoodEmotion","originalFontStyle","originalFontColor","originalResolution","originalFraming","originalOutputStyle","aspectRatio","cameraLens","copyToClipboard","text","buttonElement","originalButtonText","textarea","document","createElement","value","body","appendChild","select","execCommand","spanElement","querySelector","textContent","setTimeout","err","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","style","border","boxShadow","htmlFor","type","id","placeholder","onChange","e","target","size","option","index","onClick","prev","isPromptExpanded","setIsPromptExpanded","promptCode","imgWidth","imgHeight","src","alt","promptTitleIndex","onError","onerror","ChevronDownIcon","window","open","_c","$RefreshReg$"],"sources":["/Users/isamercan/Github/Cosmetic-Prompt-Library/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Copy, ChevronDown, Rocket, Dice5, ChevronUp as ChevronUpIcon } from 'lucide-react';\n\n// Helper function to shuffle an array\nconst shuffleArray = (array) => {\n  let currentIndex = array.length, randomIndex;\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n  return array;\n};\n\n// Main App component\nconst App = () => {\n  // State to hold the custom overlay text entered by the user\n  const [overlayText, setOverlayText] = useState('');\n  // State to hold the selected aspect ratio\n  const [selectedAspectRatio, setSelectedAspectRatio] = useState('1:1');\n  // State to hold the selected camera lens\n  const [selectedCameraLens, setSelectedCameraLens] = useState('85mm');\n  // State to hold the selected lighting style\n  const [selectedLighting, setSelectedLighting] = useState('DEFAULT_PROMPT_LIGHTING'); \n\n  // State to trigger re-randomization for \"Default (Per Prompt)\" options\n  const [randomizeKey, setRandomizeKey] = useState(0);\n\n  // States to hold the loaded prompt data from JSON\n  const [allPromptsData, setAllPromptsData] = useState(null); // Holds the entire JSON object\n  const [isLoadingOptions, setIsLoadingOptions] = useState(true);\n  const [errorLoadingOptions, setErrorLoadingOptions] = useState(false);\n\n  // Shuffled versions of the default arrays (used for 'Default (Per Prompt)' randomization)\n  const [shuffledLightingOptions, setShuffledLightingOptions] = useState([]);\n  const [shuffledSceneOptions, setShuffledSceneOptions] = useState([]);\n  const [shuffledMoodEmotionOptions, setShuffledMoodEmotionOptions] = useState([]);\n  const [shuffledFontStyleOptions, setShuffledFontStyleOptions] = useState([]);\n  const [shuffledFontColorOptions, setShuffledFontColorOptions] = useState([]);\n  const [shuffledResolutionOptions, setShuffledResolutionOptions] = useState([]);\n  const [shuffledFramingOptions, setShuffledFramingOptions] = useState([]);\n  const [shuffledOutputStyleOptions, setShuffledOutputStyleOptions] = useState([]);\n  \n  // Creative prompt names array (will be loaded from JSON and potentially shuffled)\n  const [creativePromptNames, setCreativePromptNames] = useState([]);\n\n  // Effect to load prompt data from JSON\n  useEffect(() => {\n    const loadPromptData = async () => {\n      try {\n        setIsLoadingOptions(true);\n        setErrorLoadingOptions(false);\n        \n        // Try to fetch from public directory first\n        const response = await fetch('/prompts.json');\n        \n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        \n        const data = await response.json();\n        \n        // Validate the data structure\n        if (!data || !data.options || !data.creativeNames || !data.prompts) {\n          throw new Error('Invalid data structure in prompts.json');\n        }\n        \n        setAllPromptsData(data);\n        console.log('Successfully loaded prompt data');\n      } catch (error) {\n        console.error(\"Failed to load prompt data:\", error);\n        setErrorLoadingOptions(true);\n        // Show more detailed error message\n        alert(`Failed to load prompt data: ${error.message}. Please check if prompts.json exists in the public directory.`);\n      } finally {\n        setIsLoadingOptions(false);\n      }\n    };\n    loadPromptData();\n  }, []);\n\n  // Effect to shuffle arrays when allPromptsData are loaded or randomizeKey changes\n  useEffect(() => {\n    if (allPromptsData && allPromptsData.options && allPromptsData.creativeNames) {\n      // Use options and creativeNames directly from loaded JSON\n      setShuffledLightingOptions(shuffleArray([...allPromptsData.options.lighting]));\n      setShuffledSceneOptions(shuffleArray([...allPromptsData.options.scenes]));\n      setShuffledMoodEmotionOptions(shuffleArray([...allPromptsData.options.moodEmotions]));\n      setShuffledFontStyleOptions(shuffleArray([...allPromptsData.options.fontStyles]));\n      setShuffledFontColorOptions(shuffleArray([...allPromptsData.options.fontColors]));\n      setShuffledResolutionOptions(shuffleArray([...allPromptsData.options.resolutions]));\n      setShuffledFramingOptions(shuffleArray([...allPromptsData.options.framings]));\n      setShuffledOutputStyleOptions(shuffleArray([...allPromptsData.options.outputStyles]));\n      setCreativePromptNames(shuffleArray([...allPromptsData.creativeNames])); // Creative names are also shuffled\n    }\n  }, [allPromptsData, randomizeKey]); // Re-shuffle when allPromptsData are loaded or randomizeKey changes\n\n  /**\n   * Generates a cosmetic prompt string based on the prompt's data and selected global parameters.\n   * @param {object} promptData - The specific prompt object from the JSON array.\n   * @param {string} currentOverlayText - Custom text to include as an overlay.\n   * @param {string} currentAspectRatio - Selected aspect ratio from global controls.\n   * @param {string} currentCameraLens - Selected camera lens from global controls.\n   * @param {string} selectedGlobalLighting - Selected lighting style from global controls (or default).\n   * @returns {string} The generated prompt string.\n   */\n  const generatePrompt = useCallback((\n    promptData, // Now takes the full prompt object\n    currentOverlayTextParam, // Renamed parameter to avoid confusion\n    currentAspectRatioParam,\n    currentCameraLensParam,\n    selectedGlobalLightingParam\n  ) => { \n    if (!allPromptsData || shuffledLightingOptions.length === 0) return ''; // Don't generate if data isn't ready\n\n    const hasOverlay = currentOverlayTextParam && currentOverlayTextParam.trim() !== '';\n    \n    // Use selected global lighting, or the shuffled default if 'DEFAULT_PROMPT_LIGHTING'\n    const lightingToUse = selectedGlobalLightingParam === 'DEFAULT_PROMPT_LIGHTING' \n      ? shuffledLightingOptions[promptData.parameters.lightingIndex % shuffledLightingOptions.length] \n      : selectedGlobalLightingParam;\n\n    // Get values from shuffled arrays using indices from promptData\n    const sceneToUse = shuffledSceneOptions[promptData.sceneDescriptionIndex % shuffledSceneOptions.length];\n    const moodEmotionToUse = shuffledMoodEmotionOptions[promptData.moodEmotionIndex % shuffledMoodEmotionOptions.length];\n    const fontStyleToUse = shuffledFontStyleOptions[promptData.parameters.fontStyleIndex % shuffledFontStyleOptions.length];\n    const fontColorToUse = shuffledFontColorOptions[promptData.parameters.fontColorIndex % shuffledFontColorOptions.length];\n    const resolutionToUse = shuffledResolutionOptions[promptData.parameters.resolutionIndex % shuffledResolutionOptions.length];\n    const framingToUse = shuffledFramingOptions[promptData.parameters.framingIndex % shuffledFramingOptions.length];\n    const outputStyleToUse = shuffledOutputStyleOptions[promptData.outputStyleIndex % shuffledOutputStyleOptions.length];\n\n\n    return `${hasOverlay ? `[PARAMETERS]\\nOverlay Text: ${currentOverlayTextParam}` : `[PARAMETERS]`}\\nAspect Ratio: ${currentAspectRatioParam}\\nFont Style: ${fontStyleToUse}\\nFont Color: ${fontColorToUse}\\nResolution: ${resolutionToUse}\\nCamera Lens: ${currentCameraLensParam}\\nFraming: ${framingToUse}\\nLighting: ${lightingToUse}\\n\\n[DESCRIPTION]\\n${promptData.promptDescription}\\n\\n[PRODUCT INTEGRITY]\\n${promptData.productIntegrityRequirements.map(req => `- ${req}`).join('\\n')}\\n\\n[SCENE]\\n- ${sceneToUse}\\n\\n[MOOD & EMOTION]\\n- ${moodEmotionToUse}\\n\\n[OUTPUT STYLE]\\n- ${outputStyleToUse}`;\n  }, [selectedLighting, overlayText, selectedAspectRatio, selectedCameraLens, allPromptsData, // Dependencies for useCallback\n      shuffledLightingOptions, shuffledSceneOptions, shuffledMoodEmotionOptions, \n      shuffledFontStyleOptions, shuffledFontColorOptions, shuffledResolutionOptions, \n      shuffledFramingOptions, shuffledOutputStyleOptions]); \n\n  /**\n   * Generates the original prompt text for each prompt.\n   * This function uses fixed default values from the original loaded JSON data.\n   * @param {object} originalPromptData - The specific original prompt object from the JSON array.\n   * @returns {string} The original prompt string.\n   */\n  const getOriginalPromptText = useCallback((originalPromptData) => {\n    if (!allPromptsData) return ''; // Don't generate if data isn't loaded yet\n\n    // Get values from original (unshuffled) options arrays using indices from originalPromptData\n    const originalLighting = allPromptsData.options.lighting[originalPromptData.parameters.lightingIndex]; \n    const originalScene = allPromptsData.options.scenes[originalPromptData.sceneDescriptionIndex]; \n    const originalMoodEmotion = allPromptsData.options.moodEmotions[originalPromptData.moodEmotionIndex]; \n    const originalFontStyle = allPromptsData.options.fontStyles[originalPromptData.parameters.fontStyleIndex];\n    const originalFontColor = allPromptsData.options.fontColors[originalPromptData.parameters.fontColorIndex];\n    const originalResolution = allPromptsData.options.resolutions[originalPromptData.parameters.resolutionIndex];\n    const originalFraming = allPromptsData.options.framings[originalPromptData.parameters.framingIndex];\n    const originalOutputStyle = allPromptsData.options.outputStyles[originalPromptData.outputStyleIndex];\n\n    // OverlayText was not in original prompt, so leaving it empty.\n    return `[PARAMETERS]\\nAspect Ratio: ${originalPromptData.parameters.aspectRatio}\\nFont Style: ${originalFontStyle}\\nFont Color: ${originalFontColor}\\nResolution: ${originalResolution}\\nCamera Lens: ${originalPromptData.parameters.cameraLens}\\nFraming: ${originalFraming}\\nLighting: ${originalLighting}\\n\\n[DESCRIPTION]\\n${originalPromptData.promptDescription}\\n\\n[PRODUCT INTEGRITY]\\n${originalPromptData.productIntegrityRequirements.map(req => `- ${req}`).join('\\n')}\\n\\n[SCENE]\\n- ${originalScene}\\n\\n[MOOD & EMOTION]\\n- ${originalMoodEmotion}\\n\\n[OUTPUT STYLE]\\n- ${originalOutputStyle}`;\n  }, [allPromptsData]); // Dependency on allPromptsData\n\n  // Function to copy text to clipboard\n  const copyToClipboard = (text, buttonElement, originalButtonText) => {\n    const textarea = document.createElement('textarea');\n    textarea.value = text;\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      document.execCommand('copy');\n      const spanElement = buttonElement.querySelector('span');\n      if (spanElement) {\n        spanElement.textContent = 'Copied!';\n        setTimeout(() => {\n          spanElement.textContent = originalButtonText; // Restore original button text\n        }, 2000);\n      }\n    } catch (err) {\n      console.error('Failed to copy text: ', err);\n      const spanElement = buttonElement.querySelector('span');\n      if (spanElement) {\n        spanElement.textContent = 'Failed to copy!';\n        setTimeout(() => {\n          spanElement.textContent = originalButtonText;\n        }, 2000);\n      }\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  };\n\n  return (\n    // Main container with Tailwind CSS for styling\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-950 to-black text-gray-200 font-inter relative overflow-hidden flex flex-col items-center p-4 sm:p-8\">\n      {/* Background Effects - More integrated and sophisticated */}\n      <div className=\"absolute inset-0 z-0 opacity-10\">\n        <div className=\"absolute top-1/4 left-1/4 w-80 h-80 bg-blue-500 rounded-full mix-blend-multiply filter blur-3xl opacity-40 animate-blob\"></div>\n        <div className=\"absolute bottom-1/4 right-1/4 w-80 h-80 bg-purple-500 rounded-full mix-blend-multiply filter blur-3xl opacity-40 animate-blob animation-delay-2000\"></div>\n        <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-pink-500 rounded-full mix-blend-multiply filter blur-3xl opacity-40 animate-blob animation-delay-4000\"></div>\n      </div>\n\n      {/* Page Title */}\n      <h1 className=\"text-5xl sm:text-6xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-blue-300 to-purple-400 mb-12 text-center drop-shadow-lg relative z-10 animate-fade-in\">\n        <span role=\"img\" aria-label=\"sparkle\">✨</span> COSMIC PROMPTS <span role=\"img\" aria-label=\"sparkle\">✨</span>\n      </h1>\n\n      {/* Control Panel */}\n      <div className=\"w-full max-w-4xl bg-gray-900/70 backdrop-blur-lg p-8 rounded-3xl shadow-2xl mb-12 border border-gray-700 relative z-10 animate-slide-up transition-all duration-500 hover:shadow-blue-500/30\">\n        <div className=\"absolute inset-0 rounded-3xl pointer-events-none\" style={{ border: '1px solid rgba(100, 100, 100, 0.2)', boxShadow: 'inset 0 0 25px rgba(0,200,255,0.08), 0 0 40px rgba(150,0,255,0.15)' }}></div> {/* Inner and outer glow */}\n\n        <div className=\"flex flex-col gap-6\">\n          {/* Input for Overlay Text */}\n          <div>\n            <label htmlFor=\"overlayTextInput\" className=\"block text-sm font-medium text-gray-300 mb-2\">Overlay Text (Optional)</label>\n            <input\n              type=\"text\"\n              id=\"overlayTextInput\"\n              placeholder=\"Enter custom overlay text\"\n              value={overlayText}\n              onChange={(e) => setOverlayText(e.target.value)}\n              className=\"w-full p-3 rounded-xl bg-gray-800/60 border border-blue-700 text-gray-100 focus:outline-none focus:ring-4 focus:ring-blue-500 transition-all duration-300 text-lg shadow-inner-dark focus:border-blue-500 placeholder-gray-500\"\n            />\n          </div>\n\n          {/* Dropdowns for Prompt Customization */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\"> {/* Grid updated for fewer columns */}\n            {/* Aspect Ratio */}\n            <div>\n              <label htmlFor=\"aspectRatioSelect\" className=\"block text-sm font-medium text-gray-300 mb-2\">Aspect Ratio</label>\n              <div className=\"relative\">\n                <select\n                  id=\"aspectRatioSelect\"\n                  value={selectedAspectRatio}\n                  onChange={(e) => setSelectedAspectRatio(e.target.value)}\n                  className=\"w-full p-3 rounded-xl bg-gray-800/60 border border-purple-700 text-gray-100 focus:outline-none focus:ring-4 focus:ring-purple-500 transition-all duration-300 text-lg shadow-inner-dark appearance-none pr-10 custom-select placeholder-gray-500\"\n                >\n                  <option value=\"1:1\">1:1 (Square)</option>\n                  <option value=\"4:5\">4:5 (Portrait)</option>\n                  <option value=\"16:9\">16:9 (Landscape)</option>\n                </select>\n                <ChevronDown className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 pointer-events-none\" size={20} />\n              </div>\n            </div>\n\n            {/* Camera Lens */}\n            <div>\n              <label htmlFor=\"cameraLensSelect\" className=\"block text-sm font-medium text-gray-300 mb-2\">Camera Lens</label>\n              <div className=\"relative\">\n                <select\n                  id=\"cameraLensSelect\"\n                  value={selectedCameraLens}\n                  onChange={(e) => setSelectedCameraLens(e.target.value)}\n                  className=\"w-full p-3 rounded-xl bg-gray-800/60 border border-purple-700 text-gray-100 focus:outline-none focus:ring-4 focus:ring-purple-500 transition-all duration-300 text-lg shadow-inner-dark appearance-none pr-10 custom-select placeholder-gray-500\"\n                >\n                  <option value=\"85mm\">85mm (Portrait)</option>\n                  <option value=\"50mm\">50mm (Standard)</option>\n                  <option value=\"24mm\">24mm (Wide Angle)</option>\n                </select>\n                <ChevronDown className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 pointer-events-none\" size={20} />\n              </div>\n            </div>\n\n            {/* Lighting */}\n            <div>\n              <label htmlFor=\"lightingSelect\" className=\"block text-sm font-medium text-gray-300 mb-2\">Lighting</label>\n              <div className=\"relative\">\n                <select\n                  id=\"lightingSelect\"\n                  value={selectedLighting}\n                  onChange={(e) => setSelectedLighting(e.target.value)}\n                  className=\"w-full p-3 rounded-xl bg-gray-800/60 border border-purple-700 text-gray-100 focus:outline-none focus:ring-4 focus:ring-purple-500 transition-all duration-300 text-lg shadow-inner-dark appearance-none pr-10 custom-select placeholder-gray-500\"\n                >\n                  <option value=\"DEFAULT_PROMPT_LIGHTING\">Default (Per Prompt)</option>\n                  {allPromptsData && allPromptsData.options.lighting.map((option, index) => ( // Use loaded options\n                    <option key={index} value={option}>{option}</option>\n                  ))}\n                </select>\n                <ChevronDown className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 pointer-events-none\" size={20} />\n              </div>\n            </div>\n          </div>\n          \n          {/* Randomize All Prompts Button */}\n          <button\n            onClick={() => setRandomizeKey(prev => prev + 1)} // Increment key to trigger re-shuffle\n            className=\"flex items-center justify-center gap-2 px-6 py-3 rounded-full shadow-lg text-white font-semibold relative overflow-hidden z-10 transition-all duration-300 transform hover:-translate-y-1 active:translate-y-0 text-base\n              bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 focus:outline-none focus:ring-4 focus:ring-blue-300 button-glow\"\n          >\n            <Dice5 size={24} /> Randomize All Prompts\n          </button>\n        </div>\n      </div>\n\n      {/* Prompt Grid (List View) */}\n      <div className=\"flex flex-col gap-8 w-full max-w-5xl mx-auto relative z-10\"> {/* Wider max-width */}\n        {allPromptsData && allPromptsData.prompts.map((promptData, index) => { // Iterate over loaded prompt data\n          // State for individual prompt expansion\n          const [isPromptExpanded, setIsPromptExpanded] = useState(false);\n\n          const promptCode = generatePrompt(\n            promptData, // Pass the full promptData object\n            overlayText,\n            selectedAspectRatio,\n            selectedCameraLens,\n            selectedLighting\n          );\n          const imgWidth = selectedAspectRatio === '1:1' ? 1000 : (selectedAspectRatio === '4:5' ? 800 : 1600);\n          const imgHeight = selectedAspectRatio === '1:1' ? 1000 : (selectedAspectRatio === '4:5' ? 1000 : 900);\n\n          return (\n            // Individual Prompt Card (List Item)\n            <div\n              key={promptData.id} // Use UUID as key\n              className=\"bg-gray-900/70 backdrop-blur-lg rounded-3xl shadow-xl p-6 flex flex-col md:flex-row gap-6 items-center transition-all duration-300 transform hover:scale-103 hover:shadow-blue-500/30 border border-gray-700 relative overflow-hidden group animate-fade-in-up\"\n            >\n              {/* Card Corner Effect and Inner Glow */}\n              <div className=\"absolute inset-0 rounded-3xl pointer-events-none z-20\" style={{ border: '1px solid rgba(100, 100, 100, 0.2)', boxShadow: 'inset 0 0 10px rgba(0,200,255,0.05)' }}></div>\n\n              {/* Example Image Area */}\n              <div className=\"w-full md:w-1/3 flex-shrink-0 bg-gray-800 rounded-xl overflow-hidden flex items-center justify-center border border-gray-700 group-hover:border-blue-500 transition-colors duration-300 relative aspect-w-16 aspect-h-9\"> {/* Max 9:16 aspect ratio enforced */}\n                <img\n                  src={`https://placehold.co/${imgWidth}x${imgHeight}/1A202C/93C5FD?text=AR%3A+${selectedAspectRatio}`}\n                  alt={`Example for Prompt ${promptData.promptTitleIndex}`}\n                  className=\"w-full h-full object-contain rounded-xl opacity-80 group-hover:opacity-100 transition-opacity duration-300\" // object-contain kullanıldı\n                  onError={(e) => {\n                    e.target.onerror = null;\n                    e.target.src = `https://placehold.co/400x200/1A202C/FF0000?text=Image+Unavailable`;\n                  }}\n                />\n                {/* Image Hover Effect */}\n                <div className=\"absolute inset-0 bg-gradient-to-t from-transparent to-blue-500 opacity-0 group-hover:opacity-10 transition-opacity duration-300\"></div>\n              </div>\n\n              {/* Prompt Content and Buttons */}\n              <div className=\"flex flex-col flex-grow w-full md:w-2/3\">\n                {/* Card Title */}\n                <h2 className=\"text-2xl font-bold text-purple-400 mb-3 group-hover:text-blue-400 transition-colors duration-300\">{allPromptsData.creativeNames[promptData.promptTitleIndex]}</h2> {/* Use promptTitle from JSON */}\n\n                {/* Prompt Code Display */}\n                <pre \n                  className={`bg-gray-800/60 p-4 rounded-xl text-sm font-mono whitespace-pre-wrap break-words mb-4 text-gray-300 border border-gray-700 group-hover:border-blue-600 transition-colors duration-300 shadow-inner-dark \n                  ${isPromptExpanded ? '' : 'max-h-[12rem] overflow-hidden'}`} // Fixed height and overflow\n                >\n                  {promptCode}\n                </pre>\n                \n                {/* Expand/Collapse Button for Prompt Text */}\n                <button\n                  onClick={() => setIsPromptExpanded(!isPromptExpanded)}\n                  className=\"self-start text-blue-400 hover:text-blue-300 transition-colors duration-200 text-sm font-semibold flex items-center gap-1 mb-4\"\n                >\n                  {isPromptExpanded ? (\n                    <>\n                      Show Less <ChevronUpIcon size={16} />\n                    </>\n                  ) : (\n                    <>\n                      Show Full Prompt <ChevronDownIcon size={16} />\n                    </>\n                  )}\n                </button>\n\n                {/* Buttons */}\n                <div className=\"flex flex-row gap-3 mt-auto flex-wrap sm:flex-nowrap\"> {/* Buttons always on one line */}\n                  {/* Copy Prompt & Open ChatGPT 4o Button */}\n                  <button\n                    onClick={(e) => { \n                      copyToClipboard(promptCode, e.target, 'Copy & Open GPT 4o'); \n                      window.open('https://chat.openai.com/chat', '_blank'); \n                    }}\n                    className=\"flex-1 flex items-center justify-center gap-1 px-3 py-2.5 rounded-full shadow-lg text-white font-semibold relative overflow-hidden z-10 transition-all duration-300 transform hover:-translate-y-1 active:translate-y-0 text-sm\n                    bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 focus:outline-none focus:ring-4 focus:ring-purple-300\n                    before:content-[''] before:absolute before:inset-0 before:bg-gradient-to-r before:from-purple-500 before:to-blue-500 before:opacity-0 before:transition-opacity before:duration-300 hover:before:opacity-100 hover:text-white button-glow\"\n                  >\n                    <span className=\"relative z-10 flex items-center justify-center gap-1\">\n                      <Copy size={16} /> Copy & Open GPT 4o\n                    </span>\n                  </button>\n\n                  {/* Copy Original & Open ChatGPT Button */}\n                  <button\n                    onClick={(e) => { \n                      copyToClipboard(getOriginalPromptText(promptData), e.target, 'Copy Original & Open GPT'); // Pass promptData object\n                      window.open('https://chat.openai.com/chat', '_blank'); \n                    }}\n                    className=\"flex-1 flex items-center justify-center gap-1 px-3 py-2.5 rounded-full shadow-lg text-white font-semibold relative overflow-hidden z-10 transition-all duration-300 transform hover:-translate-y-1 active:translate-y-0 text-sm\n                    bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 focus:outline-none focus:ring-4 focus:ring-blue-300\n                    before:content-[''] before:absolute before:inset-0 before:bg-gradient-to-r before:from-blue-500 before:to-purple-500 before:opacity-0 before:transition-opacity before:duration-300 hover:before:opacity-100 hover:text-white button-glow\"\n                  >\n                    <span className=\"relative z-10 flex items-center justify-center gap-1\">\n                      <Rocket size={16} /> Copy Original & Open GPT\n                    </span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Custom CSS Styles */}\n      <style>{`\n        @keyframes fade-in {\n          from { opacity: 0; transform: translateY(-20px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        @keyframes slide-up {\n          from { opacity: 0; transform: translateY(20px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        @keyframes fade-in-up {\n          from { opacity: 0; transform: translateY(30px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n        @keyframes blob {\n          0% {\n            transform: translate(0px, 0px) scale(1);\n          }\n          33% {\n            transform: translate(30px, -50px) scale(1.1);\n          }\n          66% {\n            transform: translate(-20px, 20px) scale(0.9);\n          }\n          100% {\n            transform: translate(0px, 0px) scale(1);\n          }\n        }\n        .animate-fade-in { animation: fade-in 1s ease-out forwards; }\n        .animate-slide-up { animation: slide-up 1s ease-out forwards; animation-delay: 0.2s; }\n        .animate-fade-in-up { animation: fade-in-up 0.6s ease-out forwards; }\n        .animate-fade-in-up:nth-child(1) { animation-delay: 0.3s; }\n        .animate-fade-in-up:nth-child(2) { animation-delay: 0.4s; }\n        .animate-fade-in-up:nth-child(3) { animation-delay: 0.5s; }\n        .animate-fade-in-up:nth-child(4) { animation-delay: 0.6s; }\n        /* ... remaining animations can continue with increasing delays */\n\n        .animate-blob {\n          animation: blob 7s infinite;\n        }\n        .animation-delay-2000 { animation-delay: 2s; }\n        .animation-delay-4000 { animation-delay: 4s; }\n\n        .custom-select {\n          background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cpath fill='%23a1a1aa' d='M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z'/%3E%3C/svg%3E\");\n          background-repeat: no-repeat;\n          background-position: right 0.75rem center;\n          background-size: 1.5em 1.5em;\n        }\n\n        .shadow-inner-dark {\n          box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.4);\n        }\n\n        .button-glow:hover {\n          box-shadow: 0 0 20px rgba(var(--button-glow-color), 0.7);\n        }\n        /* --button-glow-color variables would typically be in a Tailwind config,\n           but here we use direct rgba values */\n        .group-hover\\\\:shadow-fuchsia-500\\\\/50 {\n            box-shadow: 0 0 20px rgba(233, 30, 99, 0.5); /* fuchsia-500 */\n        }\n        .group-hover\\\\:shadow-indigo-500\\\\/50 {\n            box-shadow: 0 0 20px rgba(99, 102, 241, 0.5); /* indigo-500 */\n        }\n        /* Newly added styles */\n        .bg-clip-text {\n            -webkit-background-clip: text;\n            background-clip: text;\n        }\n        .placeholder-gray-500::placeholder {\n            color: #6b7280; /* Tailwind gray-500 */\n            opacity: 1; /* For Firefox */\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}